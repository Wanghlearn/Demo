{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-49cb0370\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"background\"\n};\nconst _hoisted_2 = {\n  class: \"stars\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 星空背景\"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.starsCount, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"star\",\n      key: index,\n      ref_for: true,\n      ref: \"star\"\n    });\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","starsCount","item","index","key","ref"],"sources":["D:\\Workspace\\VUE\\frontend\\src\\components\\BackStarts.vue"],"sourcesContent":["<template>\r\n<div id=\"background\">\r\n    <!-- 星空背景-->\r\n    <div class=\"stars\">\r\n        <div class=\"star\" v-for=\"(item,index) in starsCount\" :key=\"index\" ref=\"star\"></div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data(){\r\n    return{\r\n      //定义星星的数量与间距\r\n      starsCount:1000,\r\n      distance:800,\r\n    };\r\n  },\r\n    //实现星星的运动\r\n    mounted() {\r\n    //绑定组件\r\n    let starArr=this.$refs.star\r\n    //调用数组中每个元素\r\n    starArr.forEach(item=>{\r\n      var distance = this.distance+(Math.random()*300)\r\n      //设置旋转的基点\r\n      item.style.transformOrigin=`0 0 ${distance}px`\r\n      item.style.transform=`translate3d(0,0,-${distance}px)\r\n      rotateY(${(Math.random()*360)}deg) rotateX(${(Math.random()*(-80))}deg)`\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#background{\r\n  width: 100%;\r\n  min-width: 1200px;\r\n  height: 100%;\r\n  /*径向渐变*/\r\n  background: radial-gradient(ellipse at bottom, #01011f 30%, #060233 100%);\r\n  /*溢出隐藏*/\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n/*星空部分css*/\r\n.stars{\r\n    transform: perspective(800px);\r\n    transform-style: preserve-3d;\r\n    position: absolute;\r\n    left: 50%;\r\n    /*动画属性，控制速度；infinite 动画播放无限次；linear从头到尾速度相同*/\r\n    animation: rotate 70s infinite linear;\r\n    /*调整位置 让星星处于屏幕中间*/\r\n    bottom: -300px;\r\n  }\r\n/*定义star属性*/\r\n.star{\r\n  width: 2px;\r\n  height: 2px;\r\n  background: #ffffff;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n/*无限旋转 rorate为动画名称*/\r\n@keyframes rotate {\r\n  /*0%为动画的开始时间*/\r\n  0%{\r\n    /*css样式,perspective为视距，rotate*为移动距离*/\r\n    transform: perspective(600px) rotateZ(20deg) rotateX(-40deg) rotateY(0);\r\n  }\r\n  /*100%为动画的结束时间*/\r\n  100%{\r\n    transform: perspective(600px) rotateZ(20deg) rotateX(-40deg) rotateY(-360deg);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;EACKA,EAAE,EAAC;AAAY;;EAEXC,KAAK,EAAC;AAAO;;uBAFtBC,mBAAA,CAKM,OALNC,UAKM,GAJFC,mBAAA,SAAY,EACZC,mBAAA,CAEM,OAFNC,UAEM,I,kBADFJ,mBAAA,CAAmFK,SAAA,QAAAC,WAAA,CAA1CC,KAAA,CAAAC,UAAU,GAAzBC,IAAI,EAACC,KAAK;yBAApCV,mBAAA,CAAmF;MAA9ED,KAAK,EAAC,MAAM;MAAqCY,GAAG,EAAED,KAAK;;MAAEE,GAAG,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}