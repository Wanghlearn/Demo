{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\n//import {character,readFile} from \"@/assets/js/excel\";\n//import {delay} from \"@/assets/js/utils\";\n//import XLSX from \"xlsx\";\nimport * as echarts from \"echarts\";\nconst d3 = require('d3-dsv');\nexport default {\n  data() {\n    return {\n      clusterlist: [{\n        name: \"cc-cc408-hya\",\n        id: 1\n      }, {\n        name: \"cc-cc553-interestPrice\",\n        id: 2\n      }],\n      myChart: {},\n      xData: [],\n      yData: [],\n      myChartStyle: {\n        float: \"left\",\n        width: \"100%\",\n        height: \"400px\"\n      }\n    };\n  },\n  mounted() {\n    this.initEcharts();\n  },\n  watch: {\n    xData: function () {\n      this.initEcharts();\n    }\n  },\n  methods: {\n    initEcharts() {\n      const option = {\n        dataZoom: [{\n          type: 'slider',\n          show: true,\n          height: 20,\n          left: '10%',\n          right: '10%',\n          bottom: '2%',\n          start: 7 / this.xData.length * 100,\n          end: 100,\n          textStyle: {\n            color: '#d4ffff',\n            fontSize: 11\n          }\n        }, {\n          type: 'inside'\n        }],\n        xAxis: {\n          data: this.xData\n          //type:\"time\"\n        },\n\n        yAxis: {},\n        series: [{\n          data: this.yData,\n          type: \"line\"\n        }]\n      };\n      this.myChart = echarts.init(document.getElementById(\"mychart\"));\n      this.myChart.setOption(option);\n      window.addEventListener(\"resize\", () => {\n        this.myChart.resize();\n      });\n    },\n    ChooseCluster(event) {\n      console.log(event.target.value);\n      if (event.target.value == \"cc-cc408-hya\") {\n        axios.get(\"cc-cc408-hya/cc-cc408-hya_active_shardsr.csv\").then(res => {\n          var value = d3.csvParse(res.data);\n          for (var i = 0; i < value.length; i++) {\n            this.xData.push(Number((value[i].timestamp - value[0].timestamp) / 60));\n            this.yData.push(Number(value[i].health_active_shards));\n          }\n          console.log(this.xData);\n          console.log(this.yData);\n        });\n        //this.xData=[1,2,3,4,5,6]\n        //this.yData=[12,13,14,15,16]\n      } else {\n        this.xData = [2, 3, 4, 5, 6, 7];\n        this.yData = [22, 23, 24, 25, 26, 27];\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","echarts","d3","require","data","clusterlist","name","id","myChart","xData","yData","myChartStyle","float","width","height","mounted","initEcharts","watch","methods","option","dataZoom","type","show","left","right","bottom","start","length","end","textStyle","color","fontSize","xAxis","yAxis","series","init","document","getElementById","setOption","window","addEventListener","resize","ChooseCluster","event","console","log","target","value","get","then","res","csvParse","i","push","Number","timestamp","health_active_shards"],"sources":["E:\\VUE\\frontend\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n<div>\n<select v-model=\"clusterchoose\" style=\"width:200px;height:30px;margin-top:5px;margin-bottom:5px;margin-left:10px\"\n            @change=\"ChooseCluster($event)\">\n  <option value=\"\">请选择所要展示集群</option>\n  <option v-for=\"item in clusterlist\" v-bind:key=\"item.id\" v-text=\"item.name\"></option>\n</select>\n  <div class=\"echart\" id=\"mychart\" :style=\"myChartStyle\"></div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n//import {character,readFile} from \"@/assets/js/excel\";\n//import {delay} from \"@/assets/js/utils\";\n//import XLSX from \"xlsx\";\nimport * as echarts from \"echarts\"\nconst d3=require('d3-dsv')\nexport default {\n  data(){\n    return{\n      clusterlist:[{name:\"cc-cc408-hya\",id:1},{name:\"cc-cc553-interestPrice\",id:2}],\n      myChart:{},\n      xData:[],\n      yData:[],\n      myChartStyle:{float: \"left\", width: \"100%\", height: \"400px\"}\n      }\n    },\n  mounted(){\n    this.initEcharts();\n  },\n  watch:{\n    xData:function()\n    {\n      this.initEcharts();\n    }\n  },\n  methods:{\n    initEcharts()\n    {\n      const option={\n        dataZoom: [{\n        type: 'slider',\n        show: true,\n        height: 20,\n        left: '10%',\n        right: '10%',\n        bottom: '2%',\n        start:(7 / this.xData.length) * 100,\n        end: 100,\n        textStyle: {\n          color: '#d4ffff',\n          fontSize: 11\n        }\n    }, {\n    type: 'inside'\n    }],\n        xAxis:{\n          data:this.xData\n          //type:\"time\"\n        },\n        yAxis:{},\n        series:[\n          {\n            data:this.yData,\n            type:\"line\"\n          }\n        ]\n      };\n      this.myChart = echarts.init(document.getElementById(\"mychart\"));\n      this.myChart.setOption(option);\n      window.addEventListener(\"resize\",()=>{\n        this.myChart.resize();\n      })\n    },\n     ChooseCluster(event){\n      console.log(event.target.value)\n        if(event.target.value==\"cc-cc408-hya\")\n        {\n          axios.get(\"cc-cc408-hya/cc-cc408-hya_active_shardsr.csv\")\n            .then(res=>{\n              var value=d3.csvParse(res.data)\n              \n              for(var i=0;i<value.length;i++)\n              {\n                this.xData.push(Number((value[i].timestamp-value[0].timestamp)/60))\n                this.yData.push(Number(value[i].health_active_shards))\n              }\n              console.log(this.xData)\n              console.log(this.yData)\n            })\n          //this.xData=[1,2,3,4,5,6]\n          //this.yData=[12,13,14,15,16]\n        }\n        else{\n          this.xData=[2,3,4,5,6,7]\n          this.yData=[22,23,24,25,26,27]\n        }\n      }\n  }\n  \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}