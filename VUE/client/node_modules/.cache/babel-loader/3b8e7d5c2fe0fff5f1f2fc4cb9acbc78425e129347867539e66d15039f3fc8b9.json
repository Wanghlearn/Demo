{"ast":null,"code":"// 省份对应的拼音\nconst nameToPinyin = {\n  安徽省: 'ah',\n  澳门特别行政区: 'am',\n  北京市: 'bj',\n  福建省: 'fj',\n  甘肃省: 'gs',\n  广东省: 'gd',\n  广西壮族自治区: 'gx',\n  贵州省: 'gz',\n  海南省: 'hn',\n  河北省: 'hb',\n  河南省: 'hn1',\n  黑龙江省: 'hlj',\n  湖北省: 'hb1',\n  湖南省: 'hn2',\n  吉林省: 'jl',\n  江苏省: 'js',\n  江西省: 'jx',\n  辽宁省: 'ln',\n  内蒙古自治区: 'nmg',\n  宁夏回族自治区: 'nx',\n  青海省: 'qh',\n  山东省: 'sd',\n  山西省: 'sx',\n  陕西省: 'sx1',\n  上海市: 'sh',\n  四川省: 'sc',\n  台湾省: 'tw',\n  天津市: 'tj',\n  西藏自治区: 'xz',\n  香港特别行政区: 'xg',\n  新疆维吾尔自治区: 'xj',\n  云南省: 'yn',\n  浙江省: 'zj',\n  重庆市: 'cq'\n};\n\n// 获取省份名称及地图矢量数据的地址\nexport function getProvinceMapInfo(arg) {\n  // static/map/province 为各省份json数据\n  const path = `/static/map/province/${nameToPinyin[arg]}.json`;\n  return {\n    key: nameToPinyin[arg],\n    path: path\n  };\n}","map":{"version":3,"names":["nameToPinyin","安徽省","澳门特别行政区","北京市","福建省","甘肃省","广东省","广西壮族自治区","贵州省","海南省","河北省","河南省","黑龙江省","湖北省","湖南省","吉林省","江苏省","江西省","辽宁省","内蒙古自治区","宁夏回族自治区","青海省","山东省","山西省","陕西省","上海市","四川省","台湾省","天津市","西藏自治区","香港特别行政区","新疆维吾尔自治区","云南省","浙江省","重庆市","getProvinceMapInfo","arg","path","key"],"sources":["D:/feishu/VUE/client/src/utils/map-utils.js"],"sourcesContent":["// 省份对应的拼音\r\nconst nameToPinyin = {\r\n    安徽省: 'ah',\r\n    澳门特别行政区: 'am',\r\n    北京市: 'bj',\r\n    福建省: 'fj',\r\n    甘肃省: 'gs',\r\n    广东省: 'gd',\r\n    广西壮族自治区: 'gx',\r\n    贵州省: 'gz',\r\n    海南省: 'hn',\r\n    河北省: 'hb',\r\n    河南省: 'hn1',\r\n    黑龙江省: 'hlj',\r\n    湖北省: 'hb1',\r\n    湖南省: 'hn2',\r\n    吉林省: 'jl',\r\n    江苏省: 'js',\r\n    江西省: 'jx',\r\n    辽宁省: 'ln',\r\n    内蒙古自治区: 'nmg',\r\n    宁夏回族自治区: 'nx',\r\n    青海省: 'qh',\r\n    山东省: 'sd',\r\n    山西省: 'sx',\r\n    陕西省: 'sx1',\r\n    上海市: 'sh',\r\n    四川省: 'sc',\r\n    台湾省: 'tw',\r\n    天津市: 'tj',\r\n    西藏自治区: 'xz',\r\n    香港特别行政区: 'xg',\r\n    新疆维吾尔自治区: 'xj',\r\n    云南省: 'yn',\r\n    浙江省: 'zj',\r\n    重庆市: 'cq',\r\n  }\r\n  \r\n  // 获取省份名称及地图矢量数据的地址\r\n  export function getProvinceMapInfo(arg){\r\n  // static/map/province 为各省份json数据\r\n    const path = `/static/map/province/${nameToPinyin[arg]}.json`\r\n    return{\r\n        key: nameToPinyin[arg],\r\n        path: path\r\n    }\r\n  }\r\n  \r\n  "],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;EACjBC,GAAG,EAAE,IAAI;EACTC,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,KAAK;EACXC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE;AACP,CAAC;;AAED;AACA,OAAO,SAASC,kBAAkBA,CAACC,GAAG,EAAC;EACvC;EACE,MAAMC,IAAI,GAAI,wBAAuBrC,YAAY,CAACoC,GAAG,CAAE,OAAM;EAC7D,OAAM;IACFE,GAAG,EAAEtC,YAAY,CAACoC,GAAG,CAAC;IACtBC,IAAI,EAAEA;EACV,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}